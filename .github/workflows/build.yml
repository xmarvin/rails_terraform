name: Build
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: rails_terraform/${{ env.GITHUB_REF_SLUG }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  deploy:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Trigger AWS CodePipeline
        uses: zulhfreelancer/aws-codepipeline-action@v1.0.7
        with:
          aws-region: "us-west-2"
          aws-access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          pipeline-name: ${{ env.GITHUB_REF_SLUG }}-rails_terraform-pipeline